{"version":3,"sources":["webpack://customer-invoice-class/./src/account.ts","webpack://customer-invoice-class/./src/customer.ts","webpack://customer-invoice-class/./src/index.ts","webpack://customer-invoice-class/./src/invoice.ts","webpack://customer-invoice-class/webpack/bootstrap","webpack://customer-invoice-class/webpack/startup"],"names":["id","customer","balance","getID","this","getCustomer","getBalance","setBalance","toString","toFixed","getCustomerName","getName","deposit","amount","withdraw","console","log","custData","ID","name","discount","getDiscount","setDiscount","document","getElementById","addEventListener","parseInt","value","cus1","customer1","invoice1","account1","op","getAmountAfterDiscount","alert","setCustomer","getAmount","setAmount","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","call"],"mappings":"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","file":"bundle.js","sourcesContent":["//to import Customer class from customer.ts\r\nimport Customer from \"./customer\"\r\n\r\nexport default class Account extends Customer{\r\n    id: number\r\n    customer: Customer\r\n    balance: number = 0.0\r\n\r\n    constructor(id:number,customer:Customer,balance?:number){\r\n        super(customer)\r\n        this.id = id\r\n        this.customer = customer\r\n        if(typeof(balance)!=='undefined') { this.balance = balance }\r\n    }\r\n\r\n    //to return ID value\r\n    getID():number{\r\n        return this.id\r\n    }\r\n\r\n    //to return customer class value\r\n    getCustomer():Customer{\r\n        return this.customer\r\n    }\r\n\r\n    //to get balance value\r\n    getBalance():number{\r\n        return this.balance\r\n    }\r\n\r\n    //to set balance value\r\n    setBalance(balance:number):void{\r\n        this.balance = balance\r\n    }\r\n\r\n    //to return customer name(ID) and balance as string\r\n    toString():String{\r\n        return `${this.customer.toString()} balance= $${this.balance.toFixed(2)}`\r\n    }\r\n\r\n    //to return customer name from customer class\r\n    getCustomerName():String{\r\n        return this.customer.getName()\r\n    }\r\n\r\n    //to set balance value and return the class Account\r\n    deposit(amount:number):Account{\r\n        this.setBalance(amount)\r\n        return this\r\n    }\r\n\r\n    //to set balance value after subtracting from the passed amount value and return the class Account\r\n    withdraw(amount:number):Account{\r\n        if(this.balance >= amount){\r\n            this.balance = this.getBalance() - amount\r\n        }\r\n        else{\r\n            console.log(\"amount withdrawn exceeds the current balance!\")\r\n        }\r\n        return this\r\n    }\r\n}","//to import CusConfig interface from cusConfig.ts\r\nimport CusConfig from './cusConfig'\r\n\r\n//to create customer class\r\nexport default class Customer{\r\n    ID: number\r\n    name: String\r\n    discount: number\r\n\r\n    constructor(custData:CusConfig){\r\n        this.ID = custData.ID\r\n        this.name = custData.name\r\n        this.discount = custData.discount\r\n    }\r\n\r\n    //to return ID value\r\n    getID():number{\r\n        return this.ID\r\n    }\r\n\r\n    //to return name value\r\n    getName():String{\r\n        return this.name\r\n    }\r\n\r\n    //to get discount value\r\n    getDiscount():number{\r\n        return this.discount\r\n    }\r\n\r\n    //to set discount value\r\n    setDiscount(discount:number):void{\r\n        this.discount = discount\r\n    }\r\n\r\n    //to return name ID value as string\r\n    toString():String{\r\n        return `Name(ID): ${this.name}(${this.ID})`\r\n    }\r\n}","import Customer from \"./customer\"\r\nimport Invoice from \"./invoice\"\r\nimport Account from \"./account\"\r\nimport CusConfig from \"./cusConfig\"\r\n\r\ndocument.getElementById(\"submit\")?.addEventListener('click',()=>{\r\n\r\n    var [ID,name,discount] = [ parseInt((<HTMLInputElement>document.getElementById(\"id\")).value),\r\n                            (<HTMLInputElement>document.getElementById(\"name\")).value , \r\n                            parseInt((<HTMLInputElement>document.getElementById(\"discount\")).value) \r\n                        ]\r\n\r\n    var cus1:CusConfig = {\r\n        ID,\r\n        name,\r\n        discount\r\n    } \r\n\r\n    var amount = parseInt((<HTMLInputElement>document.getElementById(\"amount\")).value)\r\n    var deposit = parseInt((<HTMLInputElement>document.getElementById(\"deposit\")).value)\r\n    var withdraw = parseInt((<HTMLInputElement>document.getElementById(\"withdraw\")).value)\r\n\r\n    var customer1 = new Customer(cus1)\r\n    var invoice1 = new Invoice(ID,customer1,amount)\r\n    var account1 = new Account(ID,customer1)\r\n\r\n    var op:string = `Amount after Discount: ${invoice1.getAmountAfterDiscount()}` \r\n\r\n    account1 = account1.deposit(deposit)\r\n    op = op + `\\nBalance after deposit: ${account1.toString()}` \r\n\r\n    account1 = account1.withdraw(withdraw)\r\n    op = op + `\\nBalance after withdraw: ${account1.toString()}`                                  \r\n\r\n    alert(op)\r\n})\r\n\r\n","//to import Customer class from customer.ts\r\nimport Customer from \"./customer\"\r\n\r\n//to create Invoice class and inherit Customer class\r\nexport default class Invoice extends Customer{\r\n    ID: number\r\n    customer: Customer\r\n    amount: number\r\n\r\n    constructor(ID:number,customer:Customer,amount:number){\r\n        super(customer)\r\n        this.ID = ID\r\n        this.customer = customer\r\n        this.amount = amount\r\n    }\r\n\r\n    //to return ID value\r\n    getID():number{\r\n        return this.ID\r\n    }\r\n\r\n    //to return customer class\r\n    getCustomer():Customer{\r\n        return this.customer\r\n    }\r\n\r\n    //to set customer class\r\n    setCustomer(customer:Customer):void{\r\n        this.customer = customer\r\n    }\r\n\r\n    //to return amount value as string\r\n    getAmount():String{\r\n        return this.amount.toString()\r\n    }\r\n\r\n    //to return amount value\r\n    setAmount(amount:number):void{\r\n        this.amount = amount\r\n    }\r\n\r\n    //to return customer name value from customer class \r\n    getCustomerName():String{\r\n        return this.customer.getName()\r\n    }\r\n\r\n    //to return the difference of amount value and discount value(from customer class)\r\n    getAmountAfterDiscount():number{\r\n        return this.amount - this.customer.getDiscount()\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(607);\n"],"sourceRoot":""}